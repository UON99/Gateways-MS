{"remainingRequest":"C:\\Users\\Sava\\Desktop\\Gateways-MS\\GatewaysUI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Sava\\Desktop\\Gateways-MS\\GatewaysUI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sava\\Desktop\\Gateways-MS\\GatewaysUI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sava\\Desktop\\Gateways-MS\\GatewaysUI\\src\\components\\Home.vue?vue&type=template&id=8dc7cce2&scoped=true&","dependencies":[{"path":"C:\\Users\\Sava\\Desktop\\Gateways-MS\\GatewaysUI\\src\\components\\Home.vue","mtime":1622916093794},{"path":"C:\\Users\\Sava\\Desktop\\Gateways-MS\\GatewaysUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sava\\Desktop\\Gateways-MS\\GatewaysUI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1622913476823},{"path":"C:\\Users\\Sava\\Desktop\\Gateways-MS\\GatewaysUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sava\\Desktop\\Gateways-MS\\GatewaysUI\\node_modules\\vue-loader\\lib\\index.js","mtime":1622913476820}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}